name: Build and push image to ECR
on: 
#  push:
  workflow_dispatch:
    inputs:
      tag:
        description: "Enter image tag"
        required: true
        type: string
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.27.0' # default is latest stable
      id: install
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: python-flask-demo
        IMAGE_TAG: ${{ github.event.inputs.tag }}
      run: |
        cd blue/flask-demo
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker images
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Update kube config
      run: | 
        aws eks --region ap-south-1 update-kubeconfig --name eks_cluster_demo
        kubectl get nodes
        
    - name: check chart exist
      run: | 
        echo "::set-output name=x::`helm list|grep -w test|wc -l`"
